// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: types/cancel_policy.proto

package types

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Cancellation Penalty
type CancelPenalty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From             string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                                                   // from field
	To               string   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                                                       // to field
	Penalty          float32  `protobuf:"fixed32,4,opt,name=penalty,proto3" json:"penalty,omitempty"`                                           // Penalty amount
	Currency         Currency `protobuf:"varint,5,opt,name=currency,proto3,enum=types.Currency" json:"currency,omitempty"`                      // Penalty currency
	Description      string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                                     // Description of the penalty
	ValidForRateplan []string `protobuf:"bytes,7,rep,name=valid_for_rateplan,json=validForRateplan,proto3" json:"valid_for_rateplan,omitempty"` // For which rateplans the penalty is valid for
}

func (x *CancelPenalty) Reset() {
	*x = CancelPenalty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_cancel_policy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPenalty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPenalty) ProtoMessage() {}

func (x *CancelPenalty) ProtoReflect() protoreflect.Message {
	mi := &file_types_cancel_policy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPenalty.ProtoReflect.Descriptor instead.
func (*CancelPenalty) Descriptor() ([]byte, []int) {
	return file_types_cancel_policy_proto_rawDescGZIP(), []int{0}
}

func (x *CancelPenalty) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CancelPenalty) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CancelPenalty) GetPenalty() float32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

func (x *CancelPenalty) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_UNSPECIFIED_CURRENCY
}

func (x *CancelPenalty) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CancelPenalty) GetValidForRateplan() []string {
	if x != nil {
		return x.ValidForRateplan
	}
	return nil
}

// Cancellation Policy
type CancelPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refundable                 bool             `protobuf:"varint,1,opt,name=refundable,proto3" json:"refundable,omitempty"`                                                                      // Cancellation policy refundable or not
	FreeCancellationPolicyUpto string           `protobuf:"bytes,2,opt,name=free_cancellation_policy_upto,json=freeCancellationPolicyUpto,proto3" json:"free_cancellation_policy_upto,omitempty"` // __doc here__
	CancelPenalties            []*CancelPenalty `protobuf:"bytes,3,rep,name=cancel_penalties,json=cancelPenalties,proto3" json:"cancel_penalties,omitempty"`                                      // __doc here__
}

func (x *CancelPolicy) Reset() {
	*x = CancelPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_cancel_policy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPolicy) ProtoMessage() {}

func (x *CancelPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_types_cancel_policy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPolicy.ProtoReflect.Descriptor instead.
func (*CancelPolicy) Descriptor() ([]byte, []int) {
	return file_types_cancel_policy_proto_rawDescGZIP(), []int{1}
}

func (x *CancelPolicy) GetRefundable() bool {
	if x != nil {
		return x.Refundable
	}
	return false
}

func (x *CancelPolicy) GetFreeCancellationPolicyUpto() string {
	if x != nil {
		return x.FreeCancellationPolicyUpto
	}
	return ""
}

func (x *CancelPolicy) GetCancelPenalties() []*CancelPenalty {
	if x != nil {
		return x.CancelPenalties
	}
	return nil
}

var File_types_cancel_policy_proto protoreflect.FileDescriptor

var file_types_cancel_policy_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x1a, 0x14, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x52, 0x61, 0x74,
	0x65, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x75, 0x70, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x66,
	0x72, 0x65, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x70, 0x74, 0x6f, 0x12, 0x3f, 0x0a, 0x10, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x34, 0x74,
	0x72, 0x61, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2d, 0x6d, 0x65, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2d, 0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x62, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_types_cancel_policy_proto_rawDescOnce sync.Once
	file_types_cancel_policy_proto_rawDescData = file_types_cancel_policy_proto_rawDesc
)

func file_types_cancel_policy_proto_rawDescGZIP() []byte {
	file_types_cancel_policy_proto_rawDescOnce.Do(func() {
		file_types_cancel_policy_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_cancel_policy_proto_rawDescData)
	})
	return file_types_cancel_policy_proto_rawDescData
}

var file_types_cancel_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_types_cancel_policy_proto_goTypes = []interface{}{
	(*CancelPenalty)(nil), // 0: types.CancelPenalty
	(*CancelPolicy)(nil),  // 1: types.CancelPolicy
	(Currency)(0),         // 2: types.Currency
}
var file_types_cancel_policy_proto_depIdxs = []int32{
	2, // 0: types.CancelPenalty.currency:type_name -> types.Currency
	0, // 1: types.CancelPolicy.cancel_penalties:type_name -> types.CancelPenalty
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_types_cancel_policy_proto_init() }
func file_types_cancel_policy_proto_init() {
	if File_types_cancel_policy_proto != nil {
		return
	}
	file_types_currency_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_types_cancel_policy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPenalty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_cancel_policy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_cancel_policy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_cancel_policy_proto_goTypes,
		DependencyIndexes: file_types_cancel_policy_proto_depIdxs,
		MessageInfos:      file_types_cancel_policy_proto_msgTypes,
	}.Build()
	File_types_cancel_policy_proto = out.File
	file_types_cancel_policy_proto_rawDesc = nil
	file_types_cancel_policy_proto_goTypes = nil
	file_types_cancel_policy_proto_depIdxs = nil
}
