// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: types/currency.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ## Currency list of ISO 4217 standard
//
// ### First 20 currencies are the most traded currencies in the world
//
// # This is done to optimize the size of the protobuf message
//
// - List test
// - Line 2
// 1. Sub Line 3 Lorem ipsum
// 2. Sub Line 4 Lorem ipsum
// 3. Sub Line 5 Lorem ipsum
// - Back to first level
type Currency int32

const (
	Currency_UNSPECIFIED_CURRENCY Currency = 0   // Placeholder or unspecified currency
	Currency_AUD                  Currency = 1   // Australian dollar
	Currency_BRL                  Currency = 2   // Brazilian real
	Currency_CAD                  Currency = 3   // Canadian dollar
	Currency_CHF                  Currency = 4   // Swiss franc
	Currency_CNY                  Currency = 5   // Renminbi (China)
	Currency_EUR                  Currency = 6   // Euro
	Currency_GBP                  Currency = 7   // British pound
	Currency_HKD                  Currency = 8   // Hong Kong dollar
	Currency_IDR                  Currency = 9   // Indonesian rupiah
	Currency_INR                  Currency = 10  // Indian rupee
	Currency_JPY                  Currency = 11  // Japanese yen
	Currency_KRW                  Currency = 12  // South Korean won
	Currency_MXN                  Currency = 13  // Mexican peso
	Currency_NOK                  Currency = 14  // Norwegian krone
	Currency_RUB                  Currency = 15  // Russian ruble
	Currency_SAR                  Currency = 16  // Saudi riyal
	Currency_SEK                  Currency = 17  // Swedish krona
	Currency_SGD                  Currency = 18  // Singapore dollar
	Currency_TRY                  Currency = 19  // Turkish lira
	Currency_USD                  Currency = 20  // United States dollar
	Currency_AED                  Currency = 21  // United Arab Emirates dirham
	Currency_AFN                  Currency = 22  // Afghan afghani
	Currency_ALL                  Currency = 23  // Albanian lek
	Currency_AMD                  Currency = 24  // Armenian dram
	Currency_ANG                  Currency = 25  // Netherlands Antillean guilder
	Currency_AOA                  Currency = 26  // Angolan kwanza
	Currency_ARS                  Currency = 27  // Argentine peso
	Currency_AWG                  Currency = 28  // Aruban florin
	Currency_AZN                  Currency = 29  // Azerbaijani manat
	Currency_BAM                  Currency = 30  // Bosnia and Herzegovina convertible mark
	Currency_BBD                  Currency = 31  // Barbados dollar
	Currency_BDT                  Currency = 32  // Bangladeshi taka
	Currency_BGN                  Currency = 33  // Bulgarian lev
	Currency_BHD                  Currency = 34  // Bahraini dinar
	Currency_BIF                  Currency = 35  // Burundian franc
	Currency_BMD                  Currency = 36  // Bermudian dollar
	Currency_BND                  Currency = 37  // Brunei dollar
	Currency_BOB                  Currency = 38  // Bolivian boliviano
	Currency_BSD                  Currency = 39  // Bahamian dollar
	Currency_BTN                  Currency = 40  // Bhutanese ngultrum
	Currency_BWP                  Currency = 41  // Botswana pula
	Currency_BYN                  Currency = 42  // Belarusian ruble
	Currency_BZD                  Currency = 43  // Belize dollar
	Currency_CDF                  Currency = 44  // Congolese franc
	Currency_CLP                  Currency = 45  // Chilean peso
	Currency_COP                  Currency = 46  // Colombian peso
	Currency_CRC                  Currency = 47  // Costa Rican colón
	Currency_CUC                  Currency = 48  // Cuban convertible peso
	Currency_CUP                  Currency = 49  // Cuban peso
	Currency_CVE                  Currency = 50  // Cape Verdean escudo
	Currency_CZK                  Currency = 51  // Czech koruna
	Currency_DJF                  Currency = 52  // Djiboutian franc
	Currency_DKK                  Currency = 53  // Danish krone
	Currency_DOP                  Currency = 54  // Dominican peso
	Currency_DZD                  Currency = 55  // Algerian dinar
	Currency_EGP                  Currency = 56  // Egyptian pound
	Currency_ERN                  Currency = 57  // Eritrean nakfa
	Currency_ETB                  Currency = 58  // Ethiopian birr
	Currency_FJD                  Currency = 59  // Fijian dollar
	Currency_FKP                  Currency = 60  // Falkland Islands pound
	Currency_GEL                  Currency = 61  // Georgian lari
	Currency_GHS                  Currency = 62  // Ghanaian cedi
	Currency_GIP                  Currency = 63  // Gibraltar pound
	Currency_GMD                  Currency = 64  // Gambian dalasi
	Currency_GNF                  Currency = 65  // Guinean franc
	Currency_GTQ                  Currency = 66  // Guatemalan quetzal
	Currency_GYD                  Currency = 67  // Guyanese dollar
	Currency_HNL                  Currency = 68  // Honduran lempira
	Currency_HRK                  Currency = 69  // Croatian kuna
	Currency_HTG                  Currency = 70  // Haitian gourde
	Currency_HUF                  Currency = 71  // Hungarian forint
	Currency_ILS                  Currency = 72  // Israeli new shekel
	Currency_IQD                  Currency = 73  // Iraqi dinar
	Currency_IRR                  Currency = 74  // Iranian rial
	Currency_ISK                  Currency = 75  // Icelandic króna
	Currency_JMD                  Currency = 76  // Jamaican dollar
	Currency_JOD                  Currency = 77  // Jordanian dinar
	Currency_KES                  Currency = 78  // Kenyan shilling
	Currency_KGS                  Currency = 79  // Kyrgyzstani som
	Currency_KHR                  Currency = 80  // Cambodian riel
	Currency_KMF                  Currency = 81  // Comoro franc
	Currency_KPW                  Currency = 82  // North Korean won
	Currency_KWD                  Currency = 83  // Kuwaiti dinar
	Currency_KYD                  Currency = 84  // Cayman Islands dollar
	Currency_KZT                  Currency = 85  // Kazakhstani tenge
	Currency_LAK                  Currency = 86  // Lao kip
	Currency_LBP                  Currency = 87  // Lebanese pound
	Currency_LKR                  Currency = 88  // Sri Lanka rupee
	Currency_LRD                  Currency = 89  // Liberian dollar
	Currency_LSL                  Currency = 90  // Lesotho loti
	Currency_LYD                  Currency = 91  // Libyan dinar
	Currency_MAD                  Currency = 92  // Moroccan dirham
	Currency_MDL                  Currency = 93  // Moldovan leu
	Currency_MGA                  Currency = 94  // Malagasy ariary
	Currency_MKD                  Currency = 95  // Macedonian denar
	Currency_MMK                  Currency = 96  // Myanmar kyat
	Currency_MNT                  Currency = 97  // Mongolian tögrög
	Currency_MOP                  Currency = 98  // Macanese pataca
	Currency_MRU                  Currency = 99  // Mauritanian ouguiya
	Currency_MUR                  Currency = 100 // Mauritian rupee
	Currency_MVR                  Currency = 101 // Maldivian rufiyaa
	Currency_MWK                  Currency = 102 // Malawian kwacha
	Currency_MYR                  Currency = 103 // Malaysian ringgit
	Currency_MZN                  Currency = 104 // Mozambican metical
	Currency_NAD                  Currency = 105 // Namibian dollar
	Currency_NGN                  Currency = 106 // Nigerian naira
	Currency_NIO                  Currency = 107 // Nicaraguan córdoba
	Currency_NPR                  Currency = 108 // Nepalese rupee
	Currency_NZD                  Currency = 109 // New Zealand dollar
	Currency_OMR                  Currency = 110 // Omani rial
	Currency_PAB                  Currency = 111 // Panamanian balboa
	Currency_PEN                  Currency = 112 // Peruvian sol
	Currency_PGK                  Currency = 113 // Papua New Guinean kina
	Currency_PHP                  Currency = 114 // Philippine peso
	Currency_PKR                  Currency = 115 // Pakistani rupee
	Currency_PLN                  Currency = 116 // Polish złoty
	Currency_PYG                  Currency = 117 // Paraguayan guaraní
	Currency_QAR                  Currency = 118 // Qatari riyal
	Currency_RON                  Currency = 119 // Romanian leu
	Currency_RSD                  Currency = 120 // Serbian dinar
	Currency_RWF                  Currency = 121 // Rwandan franc
	Currency_SBD                  Currency = 122 // Solomon Islands dollar
	Currency_SCR                  Currency = 123 // Seychellois rupee
	Currency_SDG                  Currency = 124 // Sudanese pound
	Currency_SHP                  Currency = 125 // Saint Helena pound
	Currency_SLL                  Currency = 126 // Sierra Leonean leone
	Currency_SOS                  Currency = 127 // Somali shilling
	Currency_SRD                  Currency = 128 // Surinamese dollar
	Currency_SSP                  Currency = 129 // South Sudanese pound
	Currency_STN                  Currency = 130 // São Tomé and Príncipe dobra
	Currency_SVC                  Currency = 131 // Salvadoran colón
	Currency_SYP                  Currency = 132 // Syrian pound
	Currency_SZL                  Currency = 133 // Swazi lilangeni
	Currency_THB                  Currency = 134 // Thai baht
	Currency_TJS                  Currency = 135 // Tajikistani somoni
	Currency_TMT                  Currency = 136 // Turkmenistan manat
	Currency_TND                  Currency = 137 // Tunisian dinar
	Currency_TOP                  Currency = 138 // Tongan paʻanga
	Currency_TTD                  Currency = 139 // Trinidad and Tobago dollar
	Currency_TWD                  Currency = 140 // New Taiwan dollar
	Currency_TZS                  Currency = 141 // Tanzanian shilling
	Currency_UAH                  Currency = 142 // Ukrainian hryvnia
	Currency_UGX                  Currency = 143 // Ugandan shilling
	Currency_UYU                  Currency = 144 // Uruguayan peso
	Currency_UZS                  Currency = 145 // Uzbekistani soʻm
	Currency_VND                  Currency = 146 // Vietnamese đồng
	Currency_VUV                  Currency = 147 // Vanuatu vatu
	Currency_WST                  Currency = 148 // Samoan tālā
	Currency_XAF                  Currency = 149 // Central African CFA franc
	Currency_XCD                  Currency = 150 // East Caribbean dollar
	Currency_XOF                  Currency = 151 // West African CFA franc
	Currency_XPF                  Currency = 152 // CFP franc
	Currency_YER                  Currency = 153 // Yemeni rial
	Currency_ZAR                  Currency = 154 // South African rand
	Currency_ZMW                  Currency = 155 // Zambian kwacha
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0:   "UNSPECIFIED_CURRENCY",
		1:   "AUD",
		2:   "BRL",
		3:   "CAD",
		4:   "CHF",
		5:   "CNY",
		6:   "EUR",
		7:   "GBP",
		8:   "HKD",
		9:   "IDR",
		10:  "INR",
		11:  "JPY",
		12:  "KRW",
		13:  "MXN",
		14:  "NOK",
		15:  "RUB",
		16:  "SAR",
		17:  "SEK",
		18:  "SGD",
		19:  "TRY",
		20:  "USD",
		21:  "AED",
		22:  "AFN",
		23:  "ALL",
		24:  "AMD",
		25:  "ANG",
		26:  "AOA",
		27:  "ARS",
		28:  "AWG",
		29:  "AZN",
		30:  "BAM",
		31:  "BBD",
		32:  "BDT",
		33:  "BGN",
		34:  "BHD",
		35:  "BIF",
		36:  "BMD",
		37:  "BND",
		38:  "BOB",
		39:  "BSD",
		40:  "BTN",
		41:  "BWP",
		42:  "BYN",
		43:  "BZD",
		44:  "CDF",
		45:  "CLP",
		46:  "COP",
		47:  "CRC",
		48:  "CUC",
		49:  "CUP",
		50:  "CVE",
		51:  "CZK",
		52:  "DJF",
		53:  "DKK",
		54:  "DOP",
		55:  "DZD",
		56:  "EGP",
		57:  "ERN",
		58:  "ETB",
		59:  "FJD",
		60:  "FKP",
		61:  "GEL",
		62:  "GHS",
		63:  "GIP",
		64:  "GMD",
		65:  "GNF",
		66:  "GTQ",
		67:  "GYD",
		68:  "HNL",
		69:  "HRK",
		70:  "HTG",
		71:  "HUF",
		72:  "ILS",
		73:  "IQD",
		74:  "IRR",
		75:  "ISK",
		76:  "JMD",
		77:  "JOD",
		78:  "KES",
		79:  "KGS",
		80:  "KHR",
		81:  "KMF",
		82:  "KPW",
		83:  "KWD",
		84:  "KYD",
		85:  "KZT",
		86:  "LAK",
		87:  "LBP",
		88:  "LKR",
		89:  "LRD",
		90:  "LSL",
		91:  "LYD",
		92:  "MAD",
		93:  "MDL",
		94:  "MGA",
		95:  "MKD",
		96:  "MMK",
		97:  "MNT",
		98:  "MOP",
		99:  "MRU",
		100: "MUR",
		101: "MVR",
		102: "MWK",
		103: "MYR",
		104: "MZN",
		105: "NAD",
		106: "NGN",
		107: "NIO",
		108: "NPR",
		109: "NZD",
		110: "OMR",
		111: "PAB",
		112: "PEN",
		113: "PGK",
		114: "PHP",
		115: "PKR",
		116: "PLN",
		117: "PYG",
		118: "QAR",
		119: "RON",
		120: "RSD",
		121: "RWF",
		122: "SBD",
		123: "SCR",
		124: "SDG",
		125: "SHP",
		126: "SLL",
		127: "SOS",
		128: "SRD",
		129: "SSP",
		130: "STN",
		131: "SVC",
		132: "SYP",
		133: "SZL",
		134: "THB",
		135: "TJS",
		136: "TMT",
		137: "TND",
		138: "TOP",
		139: "TTD",
		140: "TWD",
		141: "TZS",
		142: "UAH",
		143: "UGX",
		144: "UYU",
		145: "UZS",
		146: "VND",
		147: "VUV",
		148: "WST",
		149: "XAF",
		150: "XCD",
		151: "XOF",
		152: "XPF",
		153: "YER",
		154: "ZAR",
		155: "ZMW",
	}
	Currency_value = map[string]int32{
		"UNSPECIFIED_CURRENCY": 0,
		"AUD":                  1,
		"BRL":                  2,
		"CAD":                  3,
		"CHF":                  4,
		"CNY":                  5,
		"EUR":                  6,
		"GBP":                  7,
		"HKD":                  8,
		"IDR":                  9,
		"INR":                  10,
		"JPY":                  11,
		"KRW":                  12,
		"MXN":                  13,
		"NOK":                  14,
		"RUB":                  15,
		"SAR":                  16,
		"SEK":                  17,
		"SGD":                  18,
		"TRY":                  19,
		"USD":                  20,
		"AED":                  21,
		"AFN":                  22,
		"ALL":                  23,
		"AMD":                  24,
		"ANG":                  25,
		"AOA":                  26,
		"ARS":                  27,
		"AWG":                  28,
		"AZN":                  29,
		"BAM":                  30,
		"BBD":                  31,
		"BDT":                  32,
		"BGN":                  33,
		"BHD":                  34,
		"BIF":                  35,
		"BMD":                  36,
		"BND":                  37,
		"BOB":                  38,
		"BSD":                  39,
		"BTN":                  40,
		"BWP":                  41,
		"BYN":                  42,
		"BZD":                  43,
		"CDF":                  44,
		"CLP":                  45,
		"COP":                  46,
		"CRC":                  47,
		"CUC":                  48,
		"CUP":                  49,
		"CVE":                  50,
		"CZK":                  51,
		"DJF":                  52,
		"DKK":                  53,
		"DOP":                  54,
		"DZD":                  55,
		"EGP":                  56,
		"ERN":                  57,
		"ETB":                  58,
		"FJD":                  59,
		"FKP":                  60,
		"GEL":                  61,
		"GHS":                  62,
		"GIP":                  63,
		"GMD":                  64,
		"GNF":                  65,
		"GTQ":                  66,
		"GYD":                  67,
		"HNL":                  68,
		"HRK":                  69,
		"HTG":                  70,
		"HUF":                  71,
		"ILS":                  72,
		"IQD":                  73,
		"IRR":                  74,
		"ISK":                  75,
		"JMD":                  76,
		"JOD":                  77,
		"KES":                  78,
		"KGS":                  79,
		"KHR":                  80,
		"KMF":                  81,
		"KPW":                  82,
		"KWD":                  83,
		"KYD":                  84,
		"KZT":                  85,
		"LAK":                  86,
		"LBP":                  87,
		"LKR":                  88,
		"LRD":                  89,
		"LSL":                  90,
		"LYD":                  91,
		"MAD":                  92,
		"MDL":                  93,
		"MGA":                  94,
		"MKD":                  95,
		"MMK":                  96,
		"MNT":                  97,
		"MOP":                  98,
		"MRU":                  99,
		"MUR":                  100,
		"MVR":                  101,
		"MWK":                  102,
		"MYR":                  103,
		"MZN":                  104,
		"NAD":                  105,
		"NGN":                  106,
		"NIO":                  107,
		"NPR":                  108,
		"NZD":                  109,
		"OMR":                  110,
		"PAB":                  111,
		"PEN":                  112,
		"PGK":                  113,
		"PHP":                  114,
		"PKR":                  115,
		"PLN":                  116,
		"PYG":                  117,
		"QAR":                  118,
		"RON":                  119,
		"RSD":                  120,
		"RWF":                  121,
		"SBD":                  122,
		"SCR":                  123,
		"SDG":                  124,
		"SHP":                  125,
		"SLL":                  126,
		"SOS":                  127,
		"SRD":                  128,
		"SSP":                  129,
		"STN":                  130,
		"SVC":                  131,
		"SYP":                  132,
		"SZL":                  133,
		"THB":                  134,
		"TJS":                  135,
		"TMT":                  136,
		"TND":                  137,
		"TOP":                  138,
		"TTD":                  139,
		"TWD":                  140,
		"TZS":                  141,
		"UAH":                  142,
		"UGX":                  143,
		"UYU":                  144,
		"UZS":                  145,
		"VND":                  146,
		"VUV":                  147,
		"WST":                  148,
		"XAF":                  149,
		"XCD":                  150,
		"XOF":                  151,
		"XPF":                  152,
		"YER":                  153,
		"ZAR":                  154,
		"ZMW":                  155,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_types_currency_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_types_currency_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_types_currency_proto_rawDescGZIP(), []int{0}
}

var File_types_currency_proto protoreflect.FileDescriptor

var file_types_currency_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2a, 0xb3, 0x0b,
	0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e,
	0x43, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x55, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x52, 0x4c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x44, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10,
	0x05, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x55, 0x52, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x42,
	0x50, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4b, 0x44, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03,
	0x49, 0x44, 0x52, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x52, 0x10, 0x0a, 0x12, 0x07,
	0x0a, 0x03, 0x4a, 0x50, 0x59, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x52, 0x57, 0x10, 0x0c,
	0x12, 0x07, 0x0a, 0x03, 0x4d, 0x58, 0x4e, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x4b,
	0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x42, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x53,
	0x41, 0x52, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x4b, 0x10, 0x11, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x47, 0x44, 0x10, 0x12, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x52, 0x59, 0x10, 0x13, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x53, 0x44, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x45, 0x44, 0x10,
	0x15, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x46, 0x4e, 0x10, 0x16, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c,
	0x4c, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d, 0x44, 0x10, 0x18, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x4e, 0x47, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4f, 0x41, 0x10, 0x1a, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x52, 0x53, 0x10, 0x1b, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x47, 0x10, 0x1c,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x5a, 0x4e, 0x10, 0x1d, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x4d,
	0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x42, 0x44, 0x10, 0x1f, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x44, 0x54, 0x10, 0x20, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x47, 0x4e, 0x10, 0x21, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x48, 0x44, 0x10, 0x22, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x46, 0x10, 0x23, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x4d, 0x44, 0x10, 0x24, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4e, 0x44, 0x10,
	0x25, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x42, 0x10, 0x26, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x53,
	0x44, 0x10, 0x27, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x54, 0x4e, 0x10, 0x28, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x57, 0x50, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x59, 0x4e, 0x10, 0x2a, 0x12, 0x07,
	0x0a, 0x03, 0x42, 0x5a, 0x44, 0x10, 0x2b, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x44, 0x46, 0x10, 0x2c,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x50, 0x10, 0x2d, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f, 0x50,
	0x10, 0x2e, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x52, 0x43, 0x10, 0x2f, 0x12, 0x07, 0x0a, 0x03, 0x43,
	0x55, 0x43, 0x10, 0x30, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x55, 0x50, 0x10, 0x31, 0x12, 0x07, 0x0a,
	0x03, 0x43, 0x56, 0x45, 0x10, 0x32, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x5a, 0x4b, 0x10, 0x33, 0x12,
	0x07, 0x0a, 0x03, 0x44, 0x4a, 0x46, 0x10, 0x34, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4b, 0x4b, 0x10,
	0x35, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4f, 0x50, 0x10, 0x36, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x5a,
	0x44, 0x10, 0x37, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x47, 0x50, 0x10, 0x38, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x52, 0x4e, 0x10, 0x39, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x42, 0x10, 0x3a, 0x12, 0x07,
	0x0a, 0x03, 0x46, 0x4a, 0x44, 0x10, 0x3b, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4b, 0x50, 0x10, 0x3c,
	0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x4c, 0x10, 0x3d, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x48, 0x53,
	0x10, 0x3e, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x50, 0x10, 0x3f, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x4d, 0x44, 0x10, 0x40, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4e, 0x46, 0x10, 0x41, 0x12, 0x07, 0x0a,
	0x03, 0x47, 0x54, 0x51, 0x10, 0x42, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x59, 0x44, 0x10, 0x43, 0x12,
	0x07, 0x0a, 0x03, 0x48, 0x4e, 0x4c, 0x10, 0x44, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x52, 0x4b, 0x10,
	0x45, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x54, 0x47, 0x10, 0x46, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x55,
	0x46, 0x10, 0x47, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4c, 0x53, 0x10, 0x48, 0x12, 0x07, 0x0a, 0x03,
	0x49, 0x51, 0x44, 0x10, 0x49, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x52, 0x52, 0x10, 0x4a, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x53, 0x4b, 0x10, 0x4b, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4d, 0x44, 0x10, 0x4c,
	0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f, 0x44, 0x10, 0x4d, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x45, 0x53,
	0x10, 0x4e, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x47, 0x53, 0x10, 0x4f, 0x12, 0x07, 0x0a, 0x03, 0x4b,
	0x48, 0x52, 0x10, 0x50, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x4d, 0x46, 0x10, 0x51, 0x12, 0x07, 0x0a,
	0x03, 0x4b, 0x50, 0x57, 0x10, 0x52, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x57, 0x44, 0x10, 0x53, 0x12,
	0x07, 0x0a, 0x03, 0x4b, 0x59, 0x44, 0x10, 0x54, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x5a, 0x54, 0x10,
	0x55, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x41, 0x4b, 0x10, 0x56, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42,
	0x50, 0x10, 0x57, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4b, 0x52, 0x10, 0x58, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x52, 0x44, 0x10, 0x59, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x53, 0x4c, 0x10, 0x5a, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x59, 0x44, 0x10, 0x5b, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x44, 0x10, 0x5c,
	0x12, 0x07, 0x0a, 0x03, 0x4d, 0x44, 0x4c, 0x10, 0x5d, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x47, 0x41,
	0x10, 0x5e, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4b, 0x44, 0x10, 0x5f, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x4d, 0x4b, 0x10, 0x60, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4e, 0x54, 0x10, 0x61, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x4f, 0x50, 0x10, 0x62, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x52, 0x55, 0x10, 0x63, 0x12,
	0x07, 0x0a, 0x03, 0x4d, 0x55, 0x52, 0x10, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x56, 0x52, 0x10,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x57, 0x4b, 0x10, 0x66, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x59,
	0x52, 0x10, 0x67, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x5a, 0x4e, 0x10, 0x68, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x41, 0x44, 0x10, 0x69, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x47, 0x4e, 0x10, 0x6a, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x49, 0x4f, 0x10, 0x6b, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x50, 0x52, 0x10, 0x6c,
	0x12, 0x07, 0x0a, 0x03, 0x4e, 0x5a, 0x44, 0x10, 0x6d, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4d, 0x52,
	0x10, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x41, 0x42, 0x10, 0x6f, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x45, 0x4e, 0x10, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x47, 0x4b, 0x10, 0x71, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x48, 0x50, 0x10, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4b, 0x52, 0x10, 0x73, 0x12,
	0x07, 0x0a, 0x03, 0x50, 0x4c, 0x4e, 0x10, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x59, 0x47, 0x10,
	0x75, 0x12, 0x07, 0x0a, 0x03, 0x51, 0x41, 0x52, 0x10, 0x76, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x4f,
	0x4e, 0x10, 0x77, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x44, 0x10, 0x78, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x57, 0x46, 0x10, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x42, 0x44, 0x10, 0x7a, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x43, 0x52, 0x10, 0x7b, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x44, 0x47, 0x10, 0x7c,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x48, 0x50, 0x10, 0x7d, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4c, 0x4c,
	0x10, 0x7e, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4f, 0x53, 0x10, 0x7f, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x52, 0x44, 0x10, 0x80, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x53, 0x50, 0x10, 0x81, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x53, 0x54, 0x4e, 0x10, 0x82, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x56, 0x43,
	0x10, 0x83, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x59, 0x50, 0x10, 0x84, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x53, 0x5a, 0x4c, 0x10, 0x85, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x48, 0x42, 0x10, 0x86,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4a, 0x53, 0x10, 0x87, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54,
	0x4d, 0x54, 0x10, 0x88, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4e, 0x44, 0x10, 0x89, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x54, 0x4f, 0x50, 0x10, 0x8a, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x54, 0x44,
	0x10, 0x8b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x57, 0x44, 0x10, 0x8c, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x54, 0x5a, 0x53, 0x10, 0x8d, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x41, 0x48, 0x10, 0x8e,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x47, 0x58, 0x10, 0x8f, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55,
	0x59, 0x55, 0x10, 0x90, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x5a, 0x53, 0x10, 0x91, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x56, 0x4e, 0x44, 0x10, 0x92, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x55, 0x56,
	0x10, 0x93, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x57, 0x53, 0x54, 0x10, 0x94, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x58, 0x41, 0x46, 0x10, 0x95, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x43, 0x44, 0x10, 0x96,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x4f, 0x46, 0x10, 0x97, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x58,
	0x50, 0x46, 0x10, 0x98, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x59, 0x45, 0x52, 0x10, 0x99, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x5a, 0x41, 0x52, 0x10, 0x9a, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x4d, 0x57,
	0x10, 0x9b, 0x01, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x34, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2f, 0x63,
	0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x2d,
	0x62, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_currency_proto_rawDescOnce sync.Once
	file_types_currency_proto_rawDescData = file_types_currency_proto_rawDesc
)

func file_types_currency_proto_rawDescGZIP() []byte {
	file_types_currency_proto_rawDescOnce.Do(func() {
		file_types_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_currency_proto_rawDescData)
	})
	return file_types_currency_proto_rawDescData
}

var file_types_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_types_currency_proto_goTypes = []interface{}{
	(Currency)(0), // 0: types.Currency
}
var file_types_currency_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_types_currency_proto_init() }
func file_types_currency_proto_init() {
	if File_types_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_currency_proto_goTypes,
		DependencyIndexes: file_types_currency_proto_depIdxs,
		EnumInfos:         file_types_currency_proto_enumTypes,
	}.Build()
	File_types_currency_proto = out.File
	file_types_currency_proto_rawDesc = nil
	file_types_currency_proto_goTypes = nil
	file_types_currency_proto_depIdxs = nil
}
